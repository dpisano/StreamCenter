import Foundation
@testable import StreamCenter

// this file was generated by Xcode-Better-Refactor-Tools
// https://github.com/tjarratt/xcode-better-refactor-tools

class FakeAsyncMainQueueRunner : AsyncMainQueueRunner, Equatable {
    init() {
    }

    private(set) var runOnMainQueueCallCount : Int = 0
    var runOnMainQueueStub : ((() -> ()) -> ())?
    private var runOnMainQueueArgs : Array<(() -> ())> = []
    func runOnMainQueueReturns(stubbedValues: ()) {
        self.runOnMainQueueStub = {(cb: () -> ()) -> () in
            return stubbedValues
        }
    }
    func runOnMainQueueArgsForCall(callIndex: Int) -> (() -> ()) {
        return self.runOnMainQueueArgs[callIndex]
    }
    func runOnMainQueue(cb: () -> ()) -> () {
        self.runOnMainQueueCallCount += 1
        self.runOnMainQueueArgs.append((cb))
        return self.runOnMainQueueStub!(cb)
    }

    static func reset() {
    }
}

func == (a: FakeAsyncMainQueueRunner, b: FakeAsyncMainQueueRunner) -> Bool {
    return a === b
}